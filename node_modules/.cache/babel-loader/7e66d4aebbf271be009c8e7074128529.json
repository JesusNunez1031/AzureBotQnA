{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * @module botframework-config\n */\n\n/**\n * Copyright(c) Microsoft Corporation.All rights reserved.\n * Licensed under the MIT License.\n */\n\nconst schema_1 = require(\"../schema\");\n\nconst connectedService_1 = require(\"./connectedService\");\n/**\n * Defines a LUIS service connection.\n */\n\n\nclass LuisService extends connectedService_1.ConnectedService {\n  /**\n   * Creates a new LuisService instance.\n   * @param source (Optional) JSON based service definition.\n   * @param type (Optional) type of service being defined.\n   */\n  constructor(source = {}, serviceType) {\n    super(source, serviceType || schema_1.ServiceTypes.Luis);\n  } // get endpoint for the luis service\n\n\n  getEndpoint() {\n    let reg = this.region.toLowerCase(); // usgovvirginia is that actual azure region name, but the cognitive service team called their endpoint 'virginia' instead of 'usgovvirginia'\n    // We handle both region names as an alias for virginia.api.cognitive.microsoft.us\n\n    if (reg === 'virginia' || reg === 'usgovvirginia') {\n      return \"https://virginia.api.cognitive.microsoft.us\";\n    } // regardless, if it starts with usgov or usdod then it is us TLD (ex: api.cognitive.microsoft.us )\n    else if (reg.startsWith('usgov') || reg.startsWith('usdod')) {\n        return \"https://\".concat(this.region, \".api.cognitive.microsoft.us\");\n      }\n\n    return \"https://\".concat(this.region, \".api.cognitive.microsoft.com\");\n  } // encrypt keys in service\n\n\n  encrypt(secret, encryptString) {\n    if (this.authoringKey && this.authoringKey.length > 0) {\n      this.authoringKey = encryptString(this.authoringKey, secret);\n    }\n\n    if (this.subscriptionKey && this.subscriptionKey.length > 0) {\n      this.subscriptionKey = encryptString(this.subscriptionKey, secret);\n    }\n  } // decrypt keys in service\n\n\n  decrypt(secret, decryptString) {\n    if (this.authoringKey && this.authoringKey.length > 0) {\n      this.authoringKey = decryptString(this.authoringKey, secret);\n    }\n\n    if (this.subscriptionKey && this.subscriptionKey.length > 0) {\n      this.subscriptionKey = decryptString(this.subscriptionKey, secret);\n    }\n  }\n\n}\n\nexports.LuisService = LuisService;","map":null,"metadata":{},"sourceType":"script"}