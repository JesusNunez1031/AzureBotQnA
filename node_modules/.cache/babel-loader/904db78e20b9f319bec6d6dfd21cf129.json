{"ast":null,"code":"/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   Ant√≥nio Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n!function (jschardet) {\n  (function () {\n    var UDF = 0; // undefined\n\n    var OTH = 1; // other\n\n    jschardet.OTH = 1;\n    var ASC = 2; // ascii capital letter\n\n    var ASS = 3; // ascii small letter\n\n    var ACV = 4; // accent capital vowel\n\n    var ACO = 5; // accent capital other\n\n    var ASV = 6; // accent small vowel\n\n    var ASO = 7; // accent small other\n\n    jschardet.Latin1_CharToClass = [OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH, // 00 - 07\n    OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH, // 08 - 0F\n    OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH, // 10 - 17\n    OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH, // 18 - 1F\n    OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH, // 20 - 27\n    OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH, // 28 - 2F\n    OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH, // 30 - 37\n    OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH, // 38 - 3F\n    OTH, ASC, ASC, ASC, ASC, ASC, ASC, ASC, // 40 - 47\n    ASC, ASC, ASC, ASC, ASC, ASC, ASC, ASC, // 48 - 4F\n    ASC, ASC, ASC, ASC, ASC, ASC, ASC, ASC, // 50 - 57\n    ASC, ASC, ASC, OTH, OTH, OTH, OTH, OTH, // 58 - 5F\n    OTH, ASS, ASS, ASS, ASS, ASS, ASS, ASS, // 60 - 67\n    ASS, ASS, ASS, ASS, ASS, ASS, ASS, ASS, // 68 - 6F\n    ASS, ASS, ASS, ASS, ASS, ASS, ASS, ASS, // 70 - 77\n    ASS, ASS, ASS, OTH, OTH, OTH, OTH, OTH, // 78 - 7F\n    OTH, UDF, OTH, ASO, OTH, OTH, OTH, OTH, // 80 - 87\n    OTH, OTH, ACO, OTH, ACO, UDF, ACO, UDF, // 88 - 8F\n    UDF, OTH, OTH, OTH, OTH, OTH, OTH, OTH, // 90 - 97\n    OTH, OTH, ASO, OTH, ASO, UDF, ASO, ACO, // 98 - 9F\n    OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH, // A0 - A7\n    OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH, // A8 - AF\n    OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH, // B0 - B7\n    OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH, // B8 - BF\n    ACV, ACV, ACV, ACV, ACV, ACV, ACO, ACO, // C0 - C7\n    ACV, ACV, ACV, ACV, ACV, ACV, ACV, ACV, // C8 - CF\n    ACO, ACO, ACV, ACV, ACV, ACV, ACV, OTH, // D0 - D7\n    ACV, ACV, ACV, ACV, ACV, ACO, ACO, ACO, // D8 - DF\n    ASV, ASV, ASV, ASV, ASV, ASV, ASO, ASO, // E0 - E7\n    ASV, ASV, ASV, ASV, ASV, ASV, ASV, ASV, // E8 - EF\n    ASO, ASO, ASV, ASV, ASV, ASV, ASV, OTH, // F0 - F7\n    ASV, ASV, ASV, ASV, ASV, ASO, ASO, ASO // F8 - FF\n    ]; // 0 : illegal\n    // 1 : very unlikely\n    // 2 : normal\n    // 3 : very likely\n\n    jschardet.Latin1ClassModel = [// UDF OTH ASC ASS ACV ACO ASV ASO\n    0, 0, 0, 0, 0, 0, 0, 0, // UDF\n    0, 3, 3, 3, 3, 3, 3, 3, // OTH\n    0, 3, 3, 3, 3, 3, 3, 3, // ASC\n    0, 3, 3, 3, 1, 1, 3, 3, // ASS\n    0, 3, 3, 3, 1, 2, 1, 2, // ACV\n    0, 3, 3, 3, 3, 3, 3, 3, // ACO\n    0, 3, 1, 3, 1, 1, 1, 3, // ASV\n    0, 3, 1, 3, 1, 1, 3, 3 // ASO\n    ];\n  })();\n\n  jschardet.Latin1Prober = function () {\n    jschardet.CharSetProber.apply(this);\n    var FREQ_CAT_NUM = 4;\n    var CLASS_NUM = 8; // total classes\n\n    var self = this;\n\n    function init() {\n      self.reset();\n    }\n\n    this.reset = function () {\n      this._mLastCharClass = jschardet.OTH;\n      this._mFreqCounter = [];\n\n      for (var i = 0; i < FREQ_CAT_NUM; this._mFreqCounter[i++] = 0);\n\n      jschardet.Latin1Prober.prototype.reset.apply(this);\n    };\n\n    this.getCharsetName = function () {\n      return \"windows-1252\";\n    };\n\n    this.feed = function (aBuf) {\n      aBuf = this.filterWithEnglishLetters(aBuf);\n\n      for (var i = 0; i < aBuf.length; i++) {\n        var c = aBuf.charCodeAt(i);\n        var charClass = jschardet.Latin1_CharToClass[c];\n        var freq = jschardet.Latin1ClassModel[this._mLastCharClass * CLASS_NUM + charClass];\n\n        if (freq == 0) {\n          this._mState = jschardet.Constants.notMe;\n          break;\n        }\n\n        this._mFreqCounter[freq]++;\n        this._mLastCharClass = charClass;\n      }\n\n      return this.getState();\n    };\n\n    this.getConfidence = function () {\n      var confidence;\n      var constants;\n\n      if (this.getState() == jschardet.Constants.notMe) {\n        return 0.01;\n      }\n\n      var total = 0;\n\n      for (var i = 0; i < this._mFreqCounter.length; i++) {\n        total += this._mFreqCounter[i];\n      }\n\n      if (total < 0.01) {\n        constants = 0.0;\n      } else {\n        confidence = this._mFreqCounter[3] / total - this._mFreqCounter[1] * 20 / total;\n      }\n\n      if (confidence < 0) {\n        confidence = 0.0;\n      } // lower the confidence of latin1 so that other more accurate detector\n      // can take priority.\n      //\n      // antonio.afonso: need to change this otherwise languages like pt, es, fr using latin1 will never be detected.\n\n\n      confidence = confidence * 0.95;\n      return confidence;\n    };\n\n    init();\n  };\n\n  jschardet.Latin1Prober.prototype = new jschardet.CharSetProber();\n}(require('./init'));","map":null,"metadata":{},"sourceType":"script"}