{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport * as React from 'react';\nimport { classNames } from '@progress/kendo-react-common';\nimport { provideIntlService, registerForIntl } from '@progress/kendo-react-intl';\nimport { FocusableUponSelection } from './base/FocusableUponSelection';\n/**\n * @hidden\n */\n\nvar Message =\n/** @class */\nfunction (_super) {\n  __extends(Message, _super);\n\n  function Message() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Message.prototype.render = function () {\n    var _this = this;\n\n    return React.createElement(\"div\", {\n      className: this.getClassNames(),\n      tabIndex: this.props.tabbable ? 0 : -1,\n      onClick: function () {\n        return _this.props.onRequestSelection(_this.props.item.selectionIndex);\n      },\n      onFocus: function () {\n        return _this.props.onRequestSelection(_this.props.item.selectionIndex);\n      },\n      ref: function (el) {\n        return _this.elementToFocus = el;\n      }\n    }, this.getTimestampView(), this.getMainView(), this.getStatusView());\n  };\n\n  Message.prototype.getMainView = function () {\n    if (this.props.item.typing) {\n      return React.createElement(\"div\", {\n        className: \"k-bubble\"\n      }, React.createElement(\"div\", {\n        className: \"k-typing-indicator\"\n      }, React.createElement(\"span\", null), React.createElement(\"span\", null), React.createElement(\"span\", null)));\n    } else if (this.props.template) {\n      return React.createElement(this.props.template, {\n        item: this.props.item\n      });\n    } else if (this.props.item.text) {\n      return React.createElement(\"div\", {\n        className: \"k-bubble\"\n      }, this.props.item.text);\n    } else {\n      return null;\n    }\n  };\n\n  Message.prototype.getTimestampView = function () {\n    var result = null;\n\n    if (this.props.item.timestamp) {\n      result = React.createElement(\"time\", {\n        className: \"k-message-time\",\n        \"aria-hidden\": !this.props.selected\n      }, provideIntlService(this).formatDate(this.props.item.timestamp, 'g'));\n    }\n\n    return result;\n  };\n\n  Message.prototype.getStatusView = function () {\n    var result = null;\n\n    if (this.props.item.status) {\n      result = React.createElement(\"span\", {\n        className: \"k-message-status\"\n      }, this.props.item.status);\n    }\n\n    return result;\n  };\n\n  Message.prototype.getClassNames = function () {\n    return classNames({\n      'k-only': this.props.isOnlyItemInGroup\n    }, {\n      'k-first': this.props.isFirstItemInGroup && !this.props.isOnlyItemInGroup\n    }, {\n      'k-last': this.props.isLastItemInGroup && !this.props.isOnlyItemInGroup\n    }, {\n      'k-state-selected': this.props.selected\n    }, {\n      'k-state-focused': this.props.selected\n    }, 'k-message');\n  };\n\n  return Message;\n}(FocusableUponSelection);\n\nexport default Message;\nregisterForIntl(Message);","map":null,"metadata":{},"sourceType":"module"}