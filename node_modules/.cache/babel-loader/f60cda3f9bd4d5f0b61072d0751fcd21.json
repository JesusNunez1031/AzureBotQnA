{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { Keys, classNames } from '@progress/kendo-react-common';\nimport * as React from 'react';\n/**\n * @hidden\n */\n\nvar NewMessage =\n/** @class */\nfunction (_super) {\n  __extends(NewMessage, _super);\n\n  function NewMessage() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.state = {\n      focused: false\n    };\n\n    _this.onInputKeyDown = function (event) {\n      if (event.keyCode === Keys.enter) {\n        _this.sendMessage(event);\n      }\n    };\n\n    _this.sendMessage = function (event) {\n      if (_this.props.onMessageSend) {\n        var messageText = _this.inputEl.value;\n\n        if (messageText) {\n          var message = {\n            author: _this.props.user,\n            text: messageText,\n            timestamp: new Date()\n          };\n\n          _this.props.onMessageSend(message, event);\n        }\n      }\n\n      _this.inputEl.focus();\n\n      _this.inputEl.value = null;\n    };\n\n    return _this;\n  }\n\n  NewMessage.prototype.render = function () {\n    var _this = this;\n\n    return React.createElement(\"div\", {\n      className: \"k-message-box\"\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: this.getClassNames(),\n      placeholder: this.props.placeholder,\n      onKeyDown: this.onInputKeyDown,\n      onFocus: function () {\n        return _this.setState({\n          focused: true\n        });\n      },\n      onBlur: function () {\n        return _this.setState({\n          focused: false\n        });\n      },\n      ref: function (el) {\n        return _this.inputEl = el;\n      }\n    }), React.createElement(\"button\", {\n      className: \"k-button k-flat k-button-icon k-button-send\",\n      onClick: this.sendMessage,\n      \"aria-label\": \"Send...\",\n      dir: this.props.isDirectionRightToLeft ? 'rtl' : undefined\n    }, React.createElement(\"svg\", {\n      version: \"1.1\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      x: \"0px\",\n      y: \"0px\",\n      viewBox: \"0 0 16 16\"\n    }, React.createElement(\"path\", {\n      d: NewMessage.buttonIconPath\n    }))));\n  };\n\n  NewMessage.prototype.focusInput = function () {\n    this.inputEl.focus();\n  };\n\n  NewMessage.prototype.getClassNames = function () {\n    return classNames({\n      'k-state-focused': this.state.focused\n    }, 'k-input');\n  }; // tslint:disable-next-line:max-line-length\n\n\n  NewMessage.buttonIconPath = 'M0,14.3c-0.1,0.6,0.3,0.8,0.8,0.6l14.8-6.5c0.5-0.2,0.5-0.6,0-0.8L0.8,1.1C0.3,0.9-0.1,1.1,0,1.7l0.7,4.2C0.8,6.5,1.4,7,1.9,7.1l8.8,0.8c0.6,0.1,0.6,0.1,0,0.2L1.9,8.9C1.4,9,0.8,9.5,0.7,10.1L0,14.3z';\n  return NewMessage;\n}(React.Component);\n\nexport default NewMessage;","map":null,"metadata":{},"sourceType":"module"}