{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport * as React from 'react';\nimport { classNames } from '@progress/kendo-react-common';\nimport Message from './Message';\nimport Attachment from './Attachment';\nimport { isAuthor } from './../utils';\n/**\n * @hidden\n */\n\nvar MessageGroup =\n/** @class */\nfunction (_super) {\n  __extends(MessageGroup, _super);\n\n  function MessageGroup() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  MessageGroup.prototype.render = function () {\n    return React.createElement(\"div\", {\n      className: this.getMsgGroupClassNames()\n    }, this.getAvatarView(), this.getAuthorNameView(), this.getGroupMessagesView());\n  };\n\n  MessageGroup.prototype.getMsgGroupClassNames = function () {\n    return classNames('k-message-group', {\n      'k-no-avatar': !this.props.group.author.avatarUrl,\n      'k-alt': isAuthor(this.props.user, this.props.group.messages[0])\n    });\n  };\n\n  MessageGroup.prototype.getAvatarView = function () {\n    var result = null;\n\n    if (this.props.group.author.avatarUrl) {\n      result = React.createElement(\"img\", {\n        src: this.props.group.author.avatarUrl,\n        className: \"k-avatar\"\n      });\n    }\n\n    return result;\n  };\n\n  MessageGroup.prototype.getAuthorNameView = function () {\n    var result = null;\n\n    if (this.props.group.author.name) {\n      result = React.createElement(\"p\", {\n        className: \"k-author\"\n      }, this.props.group.author.name);\n    }\n\n    return result;\n  };\n\n  MessageGroup.prototype.getGroupMessagesView = function () {\n    var _this = this;\n\n    var lastItemIndex = this.props.group.messages.length - 1;\n    return this.props.group.messages.map(function (msg, index) {\n      var result = [React.createElement(Message, {\n        item: msg,\n        template: _this.props.itemTemplate,\n        selected: msg.selectionIndex === _this.props.selectedItemIndex,\n        onRequestSelection: _this.props.onRequestSelection,\n        tabbable: index === lastItemIndex && _this.props.isLastGroup,\n        isFirstItemInGroup: index === 0,\n        isLastItemInGroup: index === lastItemIndex,\n        isOnlyItemInGroup: lastItemIndex === 0,\n        key: index\n      })];\n\n      if (msg.attachments && msg.attachments.length === 1) {\n        result.push(React.createElement(Attachment, {\n          item: msg.attachments[0],\n          template: _this.props.attachmentTemplate,\n          selected: false,\n          key: \"att-\" + index\n        }));\n      }\n\n      return result;\n    });\n  };\n\n  return MessageGroup;\n}(React.Component);\n\nexport default MessageGroup;","map":null,"metadata":{},"sourceType":"module"}