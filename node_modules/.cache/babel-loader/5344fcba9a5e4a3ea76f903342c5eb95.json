{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport * as React from 'react';\nimport { Keys } from '@progress/kendo-react-common';\nimport { classNames } from '@progress/kendo-react-common';\nimport { FocusableUponSelection } from './base/FocusableUponSelection';\n/**\n * @hidden\n */\n\nvar Action =\n/** @class */\nfunction (_super) {\n  __extends(Action, _super);\n\n  function Action() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.onKeyDown = function (event) {\n      if (event.keyCode === Keys.enter) {\n        _this.props.onActionExecute(_this.props.item, event);\n      }\n    };\n\n    return _this;\n  }\n\n  Action.prototype.render = function () {\n    var _this = this;\n\n    return React.createElement(\"span\", {\n      className: this.getClassNames(),\n      onClick: function (event) {\n        return _this.props.onActionExecute(_this.props.item, event);\n      },\n      ref: function (el) {\n        return _this.elementToFocus = el;\n      },\n      onKeyDown: this.onKeyDown,\n      tabIndex: this.props.tabbable ? 0 : -1\n    }, this.props.item.title || this.props.item.value);\n  };\n\n  Action.prototype.getClassNames = function () {\n    return classNames('k-quick-reply', {\n      'k-first': this.props.isFirstItemInGroup\n    }, {\n      'k-last': this.props.isLastItemInGroup\n    }, {\n      'k-state-selected': this.props.selected\n    }, {\n      'k-state-focused': this.props.selected\n    });\n  };\n\n  return Action;\n}(FocusableUponSelection);\n\nexport default Action;","map":null,"metadata":{},"sourceType":"module"}