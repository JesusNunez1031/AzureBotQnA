{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * @module botframework-config\n */\n\n/**\n * Copyright(c) Microsoft Corporation.All rights reserved.\n * Licensed under the MIT License.\n */\n\nconst schema_1 = require(\"../schema\");\n\nconst azureService_1 = require(\"./azureService\");\n/**\n * Defines an App Insights service connection.\n */\n\n\nclass AppInsightsService extends azureService_1.AzureService {\n  /**\n   * Creates a new AppInsightService instance.\n   * @param source (Optional) JSON based service definition.\n   */\n  constructor(source = {}) {\n    super(source, schema_1.ServiceTypes.AppInsights);\n    this.apiKeys = this.apiKeys || {};\n  }\n\n  encrypt(secret, encryptString) {\n    const that = this;\n\n    if (this.instrumentationKey && this.instrumentationKey.length > 0) {\n      this.instrumentationKey = encryptString(this.instrumentationKey, secret);\n    }\n\n    if (this.apiKeys) {\n      Object.keys(this.apiKeys).forEach(prop => {\n        that.apiKeys[prop] = encryptString(that.apiKeys[prop], secret);\n      });\n    }\n  }\n\n  decrypt(secret, decryptString) {\n    const that = this;\n\n    if (this.instrumentationKey && this.instrumentationKey.length > 0) {\n      this.instrumentationKey = decryptString(this.instrumentationKey, secret);\n    }\n\n    if (this.apiKeys) {\n      Object.keys(this.apiKeys).forEach(prop => {\n        that.apiKeys[prop] = decryptString(that.apiKeys[prop], secret);\n      });\n    }\n  }\n\n}\n\nexports.AppInsightsService = AppInsightsService;","map":null,"metadata":{},"sourceType":"script"}