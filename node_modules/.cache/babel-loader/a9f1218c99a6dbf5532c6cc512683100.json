{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n}); // Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nvar Enums = require(\"./enums\");\n\nvar Utils = require(\"./utils\");\n\nvar Shared = require(\"./shared\");\n\nvar ColorDefinition =\n/** @class */\nfunction () {\n  function ColorDefinition(defaultColor, subtleColor) {\n    this.default = \"#000000\";\n    this.subtle = \"#666666\";\n\n    if (defaultColor) {\n      this.default = defaultColor;\n    }\n\n    if (subtleColor) {\n      this.subtle = subtleColor;\n    }\n  }\n\n  ColorDefinition.prototype.parse = function (obj) {\n    if (obj) {\n      this.default = obj[\"default\"] || this.default;\n      this.subtle = obj[\"subtle\"] || this.subtle;\n    }\n  };\n\n  return ColorDefinition;\n}();\n\nexports.ColorDefinition = ColorDefinition;\n\nvar TextColorDefinition =\n/** @class */\nfunction (_super) {\n  __extends(TextColorDefinition, _super);\n\n  function TextColorDefinition() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.highlightColors = new ColorDefinition(\"#22000000\", \"#11000000\");\n    return _this;\n  }\n\n  TextColorDefinition.prototype.parse = function (obj) {\n    _super.prototype.parse.call(this, obj);\n\n    if (obj) {\n      this.highlightColors.parse(obj[\"highlightColors\"]);\n    }\n  };\n\n  return TextColorDefinition;\n}(ColorDefinition);\n\nexports.TextColorDefinition = TextColorDefinition;\n\nvar AdaptiveCardConfig =\n/** @class */\nfunction () {\n  function AdaptiveCardConfig(obj) {\n    this.allowCustomStyle = false;\n\n    if (obj) {\n      this.allowCustomStyle = obj[\"allowCustomStyle\"] || this.allowCustomStyle;\n    }\n  }\n\n  return AdaptiveCardConfig;\n}();\n\nexports.AdaptiveCardConfig = AdaptiveCardConfig;\n\nvar ImageSetConfig =\n/** @class */\nfunction () {\n  function ImageSetConfig(obj) {\n    this.imageSize = Enums.Size.Medium;\n    this.maxImageHeight = 100;\n\n    if (obj) {\n      this.imageSize = obj[\"imageSize\"] != null ? obj[\"imageSize\"] : this.imageSize;\n      this.maxImageHeight = Utils.getValueOrDefault(obj[\"maxImageHeight\"], 100);\n    }\n  }\n\n  ImageSetConfig.prototype.toJSON = function () {\n    return {\n      imageSize: Enums.Size[this.imageSize],\n      maxImageHeight: this.maxImageHeight\n    };\n  };\n\n  return ImageSetConfig;\n}();\n\nexports.ImageSetConfig = ImageSetConfig;\n\nvar MediaConfig =\n/** @class */\nfunction () {\n  function MediaConfig(obj) {\n    this.allowInlinePlayback = true;\n\n    if (obj) {\n      this.defaultPoster = obj[\"defaultPoster\"];\n      this.allowInlinePlayback = obj[\"allowInlinePlayback\"] || this.allowInlinePlayback;\n    }\n  }\n\n  MediaConfig.prototype.toJSON = function () {\n    return {\n      defaultPoster: this.defaultPoster,\n      allowInlinePlayback: this.allowInlinePlayback\n    };\n  };\n\n  return MediaConfig;\n}();\n\nexports.MediaConfig = MediaConfig;\n\nvar FactTextDefinition =\n/** @class */\nfunction () {\n  function FactTextDefinition(obj) {\n    this.size = Enums.TextSize.Default;\n    this.color = Enums.TextColor.Default;\n    this.isSubtle = false;\n    this.weight = Enums.TextWeight.Default;\n    this.wrap = true;\n\n    if (obj) {\n      this.size = Utils.parseHostConfigEnum(Enums.TextSize, obj[\"size\"], Enums.TextSize.Default);\n      this.color = Utils.parseHostConfigEnum(Enums.TextColor, obj[\"color\"], Enums.TextColor.Default);\n      this.isSubtle = obj[\"isSubtle\"] || this.isSubtle;\n      this.weight = Utils.parseHostConfigEnum(Enums.TextWeight, obj[\"weight\"], this.getDefaultWeight());\n      this.wrap = obj[\"wrap\"] != null ? obj[\"wrap\"] : this.wrap;\n    }\n  }\n\n  ;\n\n  FactTextDefinition.prototype.getDefaultWeight = function () {\n    return Enums.TextWeight.Default;\n  };\n\n  FactTextDefinition.prototype.toJSON = function () {\n    return {\n      size: Enums.TextSize[this.size],\n      color: Enums.TextColor[this.color],\n      isSubtle: this.isSubtle,\n      weight: Enums.TextWeight[this.weight],\n      wrap: this.wrap\n    };\n  };\n\n  return FactTextDefinition;\n}();\n\nexports.FactTextDefinition = FactTextDefinition;\n\nvar FactTitleDefinition =\n/** @class */\nfunction (_super) {\n  __extends(FactTitleDefinition, _super);\n\n  function FactTitleDefinition(obj) {\n    var _this = _super.call(this, obj) || this;\n\n    _this.maxWidth = 150;\n    _this.weight = Enums.TextWeight.Bolder;\n\n    if (obj) {\n      _this.maxWidth = obj[\"maxWidth\"] != null ? obj[\"maxWidth\"] : _this.maxWidth;\n      _this.weight = Utils.parseHostConfigEnum(Enums.TextWeight, obj[\"weight\"], Enums.TextWeight.Bolder);\n    }\n\n    return _this;\n  }\n\n  FactTitleDefinition.prototype.getDefaultWeight = function () {\n    return Enums.TextWeight.Bolder;\n  };\n\n  return FactTitleDefinition;\n}(FactTextDefinition);\n\nexports.FactTitleDefinition = FactTitleDefinition;\n\nvar FactSetConfig =\n/** @class */\nfunction () {\n  function FactSetConfig(obj) {\n    this.title = new FactTitleDefinition();\n    this.value = new FactTextDefinition();\n    this.spacing = 10;\n\n    if (obj) {\n      this.title = new FactTitleDefinition(obj[\"title\"]);\n      this.value = new FactTextDefinition(obj[\"value\"]);\n      this.spacing = obj.spacing && obj.spacing != null ? obj.spacing && obj.spacing : this.spacing;\n    }\n  }\n\n  return FactSetConfig;\n}();\n\nexports.FactSetConfig = FactSetConfig;\n\nvar ShowCardActionConfig =\n/** @class */\nfunction () {\n  function ShowCardActionConfig(obj) {\n    this.actionMode = Enums.ShowCardActionMode.Inline;\n    this.inlineTopMargin = 16;\n    this.style = Enums.ContainerStyle.Emphasis;\n\n    if (obj) {\n      this.actionMode = Utils.parseHostConfigEnum(Enums.ShowCardActionMode, obj[\"actionMode\"], Enums.ShowCardActionMode.Inline);\n      this.inlineTopMargin = obj[\"inlineTopMargin\"] != null ? obj[\"inlineTopMargin\"] : this.inlineTopMargin;\n      this.style = obj[\"style\"] && typeof obj[\"style\"] === \"string\" ? obj[\"style\"] : Enums.ContainerStyle.Emphasis;\n    }\n  }\n\n  ShowCardActionConfig.prototype.toJSON = function () {\n    return {\n      actionMode: Enums.ShowCardActionMode[this.actionMode],\n      inlineTopMargin: this.inlineTopMargin,\n      style: this.style\n    };\n  };\n\n  return ShowCardActionConfig;\n}();\n\nexports.ShowCardActionConfig = ShowCardActionConfig;\n\nvar ActionsConfig =\n/** @class */\nfunction () {\n  function ActionsConfig(obj) {\n    this.maxActions = 5;\n    this.spacing = Enums.Spacing.Default;\n    this.buttonSpacing = 20;\n    this.showCard = new ShowCardActionConfig();\n    this.preExpandSingleShowCardAction = false;\n    this.actionsOrientation = Enums.Orientation.Horizontal;\n    this.actionAlignment = Enums.ActionAlignment.Left;\n    this.iconPlacement = Enums.ActionIconPlacement.LeftOfTitle;\n    this.allowTitleToWrap = false;\n    this.iconSize = 24;\n\n    if (obj) {\n      this.maxActions = obj[\"maxActions\"] != null ? obj[\"maxActions\"] : this.maxActions;\n      this.spacing = Utils.parseHostConfigEnum(Enums.Spacing, obj.spacing && obj.spacing, Enums.Spacing.Default);\n      this.buttonSpacing = obj[\"buttonSpacing\"] != null ? obj[\"buttonSpacing\"] : this.buttonSpacing;\n      this.showCard = new ShowCardActionConfig(obj[\"showCard\"]);\n      this.preExpandSingleShowCardAction = Utils.getValueOrDefault(obj[\"preExpandSingleShowCardAction\"], false);\n      this.actionsOrientation = Utils.parseHostConfigEnum(Enums.Orientation, obj[\"actionsOrientation\"], Enums.Orientation.Horizontal);\n      this.actionAlignment = Utils.parseHostConfigEnum(Enums.ActionAlignment, obj[\"actionAlignment\"], Enums.ActionAlignment.Left);\n      this.iconPlacement = Utils.parseHostConfigEnum(Enums.ActionIconPlacement, obj[\"iconPlacement\"], Enums.ActionIconPlacement.LeftOfTitle);\n      this.allowTitleToWrap = obj[\"allowTitleToWrap\"] != null ? obj[\"allowTitleToWrap\"] : this.allowTitleToWrap;\n\n      try {\n        var sizeAndUnit = Shared.SizeAndUnit.parse(obj[\"iconSize\"]);\n\n        if (sizeAndUnit.unit == Enums.SizeUnit.Pixel) {\n          this.iconSize = sizeAndUnit.physicalSize;\n        }\n      } catch (e) {// Swallow this, keep default icon size\n      }\n    }\n  }\n\n  ActionsConfig.prototype.toJSON = function () {\n    return {\n      maxActions: this.maxActions,\n      spacing: Enums.Spacing[this.spacing],\n      buttonSpacing: this.buttonSpacing,\n      showCard: this.showCard,\n      preExpandSingleShowCardAction: this.preExpandSingleShowCardAction,\n      actionsOrientation: Enums.Orientation[this.actionsOrientation],\n      actionAlignment: Enums.ActionAlignment[this.actionAlignment]\n    };\n  };\n\n  return ActionsConfig;\n}();\n\nexports.ActionsConfig = ActionsConfig;\n\nvar ColorSetDefinition =\n/** @class */\nfunction () {\n  function ColorSetDefinition(obj) {\n    this.default = new TextColorDefinition();\n    this.dark = new TextColorDefinition();\n    this.light = new TextColorDefinition();\n    this.accent = new TextColorDefinition();\n    this.good = new TextColorDefinition();\n    this.warning = new TextColorDefinition();\n    this.attention = new TextColorDefinition();\n    this.parse(obj);\n  }\n\n  ColorSetDefinition.prototype.parseSingleColor = function (obj, propertyName) {\n    if (obj) {\n      this[propertyName].parse(obj[propertyName]);\n    }\n  };\n\n  ColorSetDefinition.prototype.parse = function (obj) {\n    if (obj) {\n      this.parseSingleColor(obj, \"default\");\n      this.parseSingleColor(obj, \"dark\");\n      this.parseSingleColor(obj, \"light\");\n      this.parseSingleColor(obj, \"accent\");\n      this.parseSingleColor(obj, \"good\");\n      this.parseSingleColor(obj, \"warning\");\n      this.parseSingleColor(obj, \"attention\");\n    }\n  };\n\n  return ColorSetDefinition;\n}();\n\nexports.ColorSetDefinition = ColorSetDefinition;\n\nvar ContainerStyleDefinition =\n/** @class */\nfunction () {\n  function ContainerStyleDefinition(obj) {\n    this.foregroundColors = new ColorSetDefinition({\n      \"default\": {\n        default: \"#333333\",\n        subtle: \"#EE333333\"\n      },\n      \"dark\": {\n        default: \"#000000\",\n        subtle: \"#66000000\"\n      },\n      \"light\": {\n        default: \"#FFFFFF\",\n        subtle: \"#33000000\"\n      },\n      \"accent\": {\n        default: \"#2E89FC\",\n        subtle: \"#882E89FC\"\n      },\n      \"good\": {\n        default: \"#54A254\",\n        subtle: \"#DD54A254\"\n      },\n      \"warning\": {\n        default: \"#E69500\",\n        subtle: \"#DDE69500\"\n      },\n      \"attention\": {\n        default: \"#CC3300\",\n        subtle: \"#DDCC3300\"\n      }\n    });\n    this.parse(obj);\n  }\n\n  ContainerStyleDefinition.prototype.parse = function (obj) {\n    if (obj) {\n      this.backgroundColor = obj[\"backgroundColor\"];\n      this.foregroundColors.parse(obj[\"foregroundColors\"]);\n      this.highlightBackgroundColor = obj[\"highlightBackgroundColor\"];\n      this.highlightForegroundColor = obj[\"highlightForegroundColor\"];\n    }\n  };\n\n  Object.defineProperty(ContainerStyleDefinition.prototype, \"isBuiltIn\", {\n    get: function () {\n      return false;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return ContainerStyleDefinition;\n}();\n\nexports.ContainerStyleDefinition = ContainerStyleDefinition;\n\nvar BuiltInContainerStyleDefinition =\n/** @class */\nfunction (_super) {\n  __extends(BuiltInContainerStyleDefinition, _super);\n\n  function BuiltInContainerStyleDefinition() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(BuiltInContainerStyleDefinition.prototype, \"isBuiltIn\", {\n    get: function () {\n      return true;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return BuiltInContainerStyleDefinition;\n}(ContainerStyleDefinition);\n\nvar ContainerStyleSet =\n/** @class */\nfunction () {\n  function ContainerStyleSet(obj) {\n    this._allStyles = {};\n    this._allStyles[Enums.ContainerStyle.Default] = new BuiltInContainerStyleDefinition();\n    this._allStyles[Enums.ContainerStyle.Emphasis] = new BuiltInContainerStyleDefinition();\n    this._allStyles[Enums.ContainerStyle.Accent] = new BuiltInContainerStyleDefinition();\n    this._allStyles[Enums.ContainerStyle.Good] = new BuiltInContainerStyleDefinition();\n    this._allStyles[Enums.ContainerStyle.Attention] = new BuiltInContainerStyleDefinition();\n    this._allStyles[Enums.ContainerStyle.Warning] = new BuiltInContainerStyleDefinition();\n\n    if (obj) {\n      this._allStyles[Enums.ContainerStyle.Default].parse(obj[Enums.ContainerStyle.Default]);\n\n      this._allStyles[Enums.ContainerStyle.Emphasis].parse(obj[Enums.ContainerStyle.Emphasis]);\n\n      this._allStyles[Enums.ContainerStyle.Accent].parse(obj[Enums.ContainerStyle.Accent]);\n\n      this._allStyles[Enums.ContainerStyle.Good].parse(obj[Enums.ContainerStyle.Good]);\n\n      this._allStyles[Enums.ContainerStyle.Attention].parse(obj[Enums.ContainerStyle.Attention]);\n\n      this._allStyles[Enums.ContainerStyle.Warning].parse(obj[Enums.ContainerStyle.Warning]);\n\n      var customStyleArray = obj[\"customStyles\"];\n\n      if (customStyleArray && Array.isArray(customStyleArray)) {\n        for (var _i = 0, customStyleArray_1 = customStyleArray; _i < customStyleArray_1.length; _i++) {\n          var customStyle = customStyleArray_1[_i];\n\n          if (customStyle) {\n            var styleName = customStyle[\"name\"];\n\n            if (styleName && typeof styleName === \"string\") {\n              if (this._allStyles.hasOwnProperty(styleName)) {\n                this._allStyles[styleName].parse(customStyle[\"style\"]);\n              } else {\n                this._allStyles[styleName] = new ContainerStyleDefinition(customStyle[\"style\"]);\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  ContainerStyleSet.prototype.toJSON = function () {\n    var _this = this;\n\n    var customStyleArray = [];\n    Object.keys(this._allStyles).forEach(function (key) {\n      if (!_this._allStyles[key].isBuiltIn) {\n        customStyleArray.push({\n          name: key,\n          style: _this._allStyles[key]\n        });\n      }\n    });\n    var result = {\n      default: this.default,\n      emphasis: this.emphasis\n    };\n\n    if (customStyleArray.length > 0) {\n      result.customStyles = customStyleArray;\n    }\n\n    return result;\n  };\n\n  ContainerStyleSet.prototype.getStyleByName = function (name, defaultValue) {\n    if (defaultValue === void 0) {\n      defaultValue = null;\n    }\n\n    return this._allStyles.hasOwnProperty(name) ? this._allStyles[name] : defaultValue;\n  };\n\n  Object.defineProperty(ContainerStyleSet.prototype, \"default\", {\n    get: function () {\n      return this._allStyles[Enums.ContainerStyle.Default];\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ContainerStyleSet.prototype, \"emphasis\", {\n    get: function () {\n      return this._allStyles[Enums.ContainerStyle.Emphasis];\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return ContainerStyleSet;\n}();\n\nexports.ContainerStyleSet = ContainerStyleSet;\n\nvar Version =\n/** @class */\nfunction () {\n  function Version(major, minor) {\n    if (major === void 0) {\n      major = 1;\n    }\n\n    if (minor === void 0) {\n      minor = 1;\n    }\n\n    this._isValid = true;\n    this._major = major;\n    this._minor = minor;\n  }\n\n  Version.parse = function (versionString, errors) {\n    if (!versionString) {\n      return null;\n    }\n\n    var result = new Version();\n    result._versionString = versionString;\n    var regEx = /(\\d+).(\\d+)/gi;\n    var matches = regEx.exec(versionString);\n\n    if (matches != null && matches.length == 3) {\n      result._major = parseInt(matches[1]);\n      result._minor = parseInt(matches[2]);\n    } else {\n      result._isValid = false;\n    }\n\n    if (!result._isValid && errors) {\n      errors.push({\n        error: Enums.ValidationError.InvalidPropertyValue,\n        message: \"Invalid version string: \" + result._versionString\n      });\n    }\n\n    return result;\n  };\n\n  Version.prototype.toString = function () {\n    return !this._isValid ? this._versionString : this._major + \".\" + this._minor;\n  };\n\n  Version.prototype.compareTo = function (otherVersion) {\n    if (!this.isValid || !otherVersion.isValid) {\n      throw new Error(\"Cannot compare invalid version.\");\n    }\n\n    if (this.major > otherVersion.major) {\n      return 1;\n    } else if (this.major < otherVersion.major) {\n      return -1;\n    } else if (this.minor > otherVersion.minor) {\n      return 1;\n    } else if (this.minor < otherVersion.minor) {\n      return -1;\n    }\n\n    return 0;\n  };\n\n  Object.defineProperty(Version.prototype, \"major\", {\n    get: function () {\n      return this._major;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Version.prototype, \"minor\", {\n    get: function () {\n      return this._minor;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Version.prototype, \"isValid\", {\n    get: function () {\n      return this._isValid;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return Version;\n}();\n\nexports.Version = Version;\n\nvar HostCapabilities =\n/** @class */\nfunction () {\n  function HostCapabilities() {\n    this.capabilities = null;\n  }\n\n  HostCapabilities.prototype.setCapability = function (name, version) {\n    if (!this.capabilities) {\n      this.capabilities = {};\n    }\n\n    this.capabilities[name] = version;\n  };\n\n  HostCapabilities.prototype.parse = function (json, errors) {\n    if (json) {\n      for (var name_1 in json) {\n        var jsonVersion = json[name_1];\n\n        if (typeof jsonVersion === \"string\") {\n          if (jsonVersion == \"*\") {\n            this.setCapability(name_1, \"*\");\n          } else {\n            var version = Version.parse(jsonVersion, errors);\n\n            if (version.isValid) {\n              this.setCapability(name_1, version);\n            }\n          }\n        }\n      }\n    }\n  };\n\n  HostCapabilities.prototype.hasCapability = function (name, version) {\n    if (this.capabilities && this.capabilities.hasOwnProperty(name)) {\n      if (version == \"*\" || this.capabilities[name] == \"*\") {\n        return true;\n      }\n\n      return version.compareTo(this.capabilities[name]) <= 0;\n    }\n\n    return false;\n  };\n\n  HostCapabilities.prototype.areAllMet = function (hostCapabilities) {\n    if (this.capabilities) {\n      for (var capabilityName in this.capabilities) {\n        if (!hostCapabilities.hasCapability(capabilityName, this.capabilities[capabilityName])) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  };\n\n  return HostCapabilities;\n}();\n\nexports.HostCapabilities = HostCapabilities;\n\nvar FontTypeDefinition =\n/** @class */\nfunction () {\n  function FontTypeDefinition(fontFamily) {\n    this.fontFamily = \"Segoe UI,Segoe,Segoe WP,Helvetica Neue,Helvetica,sans-serif\";\n    this.fontSizes = {\n      small: 12,\n      default: 14,\n      medium: 17,\n      large: 21,\n      extraLarge: 26\n    };\n    this.fontWeights = {\n      lighter: 200,\n      default: 400,\n      bolder: 600\n    };\n\n    if (fontFamily) {\n      this.fontFamily = fontFamily;\n    }\n  }\n\n  FontTypeDefinition.prototype.parse = function (obj) {\n    this.fontFamily = obj[\"fontFamily\"] || this.fontFamily;\n    this.fontSizes = {\n      small: obj.fontSizes && obj.fontSizes[\"small\"] || this.fontSizes.small,\n      default: obj.fontSizes && obj.fontSizes[\"default\"] || this.fontSizes.default,\n      medium: obj.fontSizes && obj.fontSizes[\"medium\"] || this.fontSizes.medium,\n      large: obj.fontSizes && obj.fontSizes[\"large\"] || this.fontSizes.large,\n      extraLarge: obj.fontSizes && obj.fontSizes[\"extraLarge\"] || this.fontSizes.extraLarge\n    };\n    this.fontWeights = {\n      lighter: obj.fontWeights && obj.fontWeights[\"lighter\"] || this.fontWeights.lighter,\n      default: obj.fontWeights && obj.fontWeights[\"default\"] || this.fontWeights.default,\n      bolder: obj.fontWeights && obj.fontWeights[\"bolder\"] || this.fontWeights.bolder\n    };\n  };\n\n  FontTypeDefinition.monospace = new FontTypeDefinition(\"'Courier New', Courier, monospace\");\n  return FontTypeDefinition;\n}();\n\nexports.FontTypeDefinition = FontTypeDefinition;\n\nvar FontTypeSet =\n/** @class */\nfunction () {\n  function FontTypeSet(obj) {\n    this.default = new FontTypeDefinition();\n    this.monospace = new FontTypeDefinition(\"'Courier New', Courier, monospace\");\n\n    if (obj) {\n      this.default.parse(obj[\"default\"]);\n      this.monospace.parse(obj[\"monospace\"]);\n    }\n  }\n\n  FontTypeSet.prototype.getStyleDefinition = function (style) {\n    switch (style) {\n      case Enums.FontType.Monospace:\n        return this.monospace;\n\n      case Enums.FontType.Default:\n      default:\n        return this.default;\n    }\n  };\n\n  return FontTypeSet;\n}();\n\nexports.FontTypeSet = FontTypeSet;\n\nvar HostConfig =\n/** @class */\nfunction () {\n  function HostConfig(obj) {\n    this.hostCapabilities = new HostCapabilities();\n    this.choiceSetInputValueSeparator = \",\";\n    this.supportsInteractivity = true;\n    this.fontTypes = null;\n    this.spacing = {\n      small: 3,\n      default: 8,\n      medium: 20,\n      large: 30,\n      extraLarge: 40,\n      padding: 15\n    };\n    this.separator = {\n      lineThickness: 1,\n      lineColor: \"#EEEEEE\"\n    };\n    this.imageSizes = {\n      small: 40,\n      medium: 80,\n      large: 160\n    };\n    this.containerStyles = new ContainerStyleSet();\n    this.actions = new ActionsConfig();\n    this.adaptiveCard = new AdaptiveCardConfig();\n    this.imageSet = new ImageSetConfig();\n    this.media = new MediaConfig();\n    this.factSet = new FactSetConfig();\n    this.cssClassNamePrefix = null;\n\n    if (obj) {\n      if (typeof obj === \"string\" || obj instanceof String) {\n        obj = JSON.parse(obj);\n      }\n\n      this.choiceSetInputValueSeparator = obj && typeof obj[\"choiceSetInputValueSeparator\"] === \"string\" ? obj[\"choiceSetInputValueSeparator\"] : this.choiceSetInputValueSeparator;\n      this.supportsInteractivity = obj && typeof obj[\"supportsInteractivity\"] === \"boolean\" ? obj[\"supportsInteractivity\"] : this.supportsInteractivity;\n      this._legacyFontType = new FontTypeDefinition();\n\n      this._legacyFontType.parse(obj);\n\n      if (obj.fontTypes) {\n        this.fontTypes = new FontTypeSet(obj.fontTypes);\n      }\n\n      if (obj.lineHeights) {\n        this.lineHeights = {\n          small: obj.lineHeights[\"small\"],\n          default: obj.lineHeights[\"default\"],\n          medium: obj.lineHeights[\"medium\"],\n          large: obj.lineHeights[\"large\"],\n          extraLarge: obj.lineHeights[\"extraLarge\"]\n        };\n      }\n\n      ;\n      this.imageSizes = {\n        small: obj.imageSizes && obj.imageSizes[\"small\"] || this.imageSizes.small,\n        medium: obj.imageSizes && obj.imageSizes[\"medium\"] || this.imageSizes.medium,\n        large: obj.imageSizes && obj.imageSizes[\"large\"] || this.imageSizes.large\n      };\n      this.containerStyles = new ContainerStyleSet(obj[\"containerStyles\"]);\n      this.spacing = {\n        small: obj.spacing && obj.spacing[\"small\"] || this.spacing.small,\n        default: obj.spacing && obj.spacing[\"default\"] || this.spacing.default,\n        medium: obj.spacing && obj.spacing[\"medium\"] || this.spacing.medium,\n        large: obj.spacing && obj.spacing[\"large\"] || this.spacing.large,\n        extraLarge: obj.spacing && obj.spacing[\"extraLarge\"] || this.spacing.extraLarge,\n        padding: obj.spacing && obj.spacing[\"padding\"] || this.spacing.padding\n      };\n      this.separator = {\n        lineThickness: obj.separator && obj.separator[\"lineThickness\"] || this.separator.lineThickness,\n        lineColor: obj.separator && obj.separator[\"lineColor\"] || this.separator.lineColor\n      };\n      this.actions = new ActionsConfig(obj.actions || this.actions);\n      this.adaptiveCard = new AdaptiveCardConfig(obj.adaptiveCard || this.adaptiveCard);\n      this.imageSet = new ImageSetConfig(obj[\"imageSet\"]);\n      this.factSet = new FactSetConfig(obj[\"factSet\"]);\n    }\n  }\n\n  HostConfig.prototype.getFontTypeDefinition = function (style) {\n    if (this.fontTypes) {\n      return this.fontTypes.getStyleDefinition(style);\n    } else {\n      return style == Enums.FontType.Monospace ? FontTypeDefinition.monospace : this._legacyFontType;\n    }\n  };\n\n  HostConfig.prototype.getEffectiveSpacing = function (spacing) {\n    switch (spacing) {\n      case Enums.Spacing.Small:\n        return this.spacing.small;\n\n      case Enums.Spacing.Default:\n        return this.spacing.default;\n\n      case Enums.Spacing.Medium:\n        return this.spacing.medium;\n\n      case Enums.Spacing.Large:\n        return this.spacing.large;\n\n      case Enums.Spacing.ExtraLarge:\n        return this.spacing.extraLarge;\n\n      case Enums.Spacing.Padding:\n        return this.spacing.padding;\n\n      default:\n        return 0;\n    }\n  };\n\n  HostConfig.prototype.paddingDefinitionToSpacingDefinition = function (paddingDefinition) {\n    return new Shared.SpacingDefinition(this.getEffectiveSpacing(paddingDefinition.top), this.getEffectiveSpacing(paddingDefinition.right), this.getEffectiveSpacing(paddingDefinition.bottom), this.getEffectiveSpacing(paddingDefinition.left));\n  };\n\n  HostConfig.prototype.makeCssClassNames = function () {\n    var classNames = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      classNames[_i] = arguments[_i];\n    }\n\n    var result = [];\n\n    for (var _a = 0, classNames_1 = classNames; _a < classNames_1.length; _a++) {\n      var className = classNames_1[_a];\n      result.push((this.cssClassNamePrefix ? this.cssClassNamePrefix + \"-\" : \"\") + className);\n    }\n\n    return result;\n  };\n\n  HostConfig.prototype.makeCssClassName = function () {\n    var classNames = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      classNames[_i] = arguments[_i];\n    }\n\n    var result = this.makeCssClassNames.apply(this, classNames).join(\" \");\n    return result ? result : \"\";\n  };\n\n  Object.defineProperty(HostConfig.prototype, \"fontFamily\", {\n    get: function () {\n      return this._legacyFontType.fontFamily;\n    },\n    set: function (value) {\n      this._legacyFontType.fontFamily = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(HostConfig.prototype, \"fontSizes\", {\n    get: function () {\n      return this._legacyFontType.fontSizes;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(HostConfig.prototype, \"fontWeights\", {\n    get: function () {\n      return this._legacyFontType.fontWeights;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return HostConfig;\n}();\n\nexports.HostConfig = HostConfig;","map":null,"metadata":{},"sourceType":"script"}