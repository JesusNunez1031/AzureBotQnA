{"ast":null,"code":"/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   Ant√≥nio Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n!function (jschardet) {\n  jschardet.SBCSGroupProber = function () {\n    jschardet.CharSetGroupProber.apply(this);\n    var self = this;\n\n    function init() {\n      self._mProbers = [new jschardet.SingleByteCharSetProber(jschardet.Win1251CyrillicModel), new jschardet.SingleByteCharSetProber(jschardet.Koi8rModel), new jschardet.SingleByteCharSetProber(jschardet.Latin5CyrillicModel), new jschardet.SingleByteCharSetProber(jschardet.MacCyrillicModel), new jschardet.SingleByteCharSetProber(jschardet.Ibm866Model), new jschardet.SingleByteCharSetProber(jschardet.Ibm855Model), new jschardet.SingleByteCharSetProber(jschardet.Latin7GreekModel), new jschardet.SingleByteCharSetProber(jschardet.Win1253GreekModel), new jschardet.SingleByteCharSetProber(jschardet.Latin5BulgarianModel), new jschardet.SingleByteCharSetProber(jschardet.Win1251BulgarianModel), new jschardet.SingleByteCharSetProber(jschardet.Latin2HungarianModel), new jschardet.SingleByteCharSetProber(jschardet.Win1250HungarianModel), new jschardet.SingleByteCharSetProber(jschardet.TIS620ThaiModel)];\n      var hebrewProber = new jschardet.HebrewProber();\n      var logicalHebrewProber = new jschardet.SingleByteCharSetProber(jschardet.Win1255HebrewModel, false, hebrewProber);\n      var visualHebrewProber = new jschardet.SingleByteCharSetProber(jschardet.Win1255HebrewModel, true, hebrewProber);\n      hebrewProber.setModelProbers(logicalHebrewProber, visualHebrewProber);\n\n      self._mProbers.push(hebrewProber, logicalHebrewProber, visualHebrewProber);\n\n      self.reset();\n    }\n\n    init();\n  };\n\n  jschardet.SBCSGroupProber.prototype = new jschardet.CharSetGroupProber();\n}(require('./init'));","map":null,"metadata":{},"sourceType":"script"}